// source: beike/beike.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.message.BEIKE', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK', null, global);
goog.exportSymbol('proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.displayName = 'proto.message.BEIKE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.message.BEIKE.DATA.repeatedFields_, null);
};
goog.inherits(proto.message.BEIKE.DATA, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.displayName = 'proto.message.BEIKE.DATA';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.displayName = 'proto.message.BEIKE.DATA.DATA';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.repeatedFields_, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.repeatedFields_, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.repeatedFields_, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.repeatedFields_, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.displayName = 'proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    data: (f = msg.getData()) && proto.message.BEIKE.DATA.toObject(includeInstance, f),
    msg: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE}
 */
proto.message.BEIKE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE;
  return proto.message.BEIKE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE}
 */
proto.message.BEIKE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCode(value);
      break;
    case 2:
      var value = new proto.message.BEIKE.DATA;
      reader.readMessage(value,proto.message.BEIKE.DATA.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.message.BEIKE.DATA.serializeBinaryToWriter
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.message.BEIKE.DATA.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.toObject = function(includeInstance, msg) {
  var f, obj = {
    errno: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && proto.message.BEIKE.DATA.DATA.toObject(includeInstance, f),
    errkeysList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA}
 */
proto.message.BEIKE.DATA.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA;
  return proto.message.BEIKE.DATA.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA}
 */
proto.message.BEIKE.DATA.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setErrno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 3:
      var value = new proto.message.BEIKE.DATA.DATA;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addErrkeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrno();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.message.BEIKE.DATA.DATA.serializeBinaryToWriter
    );
  }
  f = message.getErrkeysList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.toObject = function(includeInstance, msg) {
  var f, obj = {
    getershoufanglist: (f = msg.getGetershoufanglist()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA}
 */
proto.message.BEIKE.DATA.DATA.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA;
  return proto.message.BEIKE.DATA.DATA.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA}
 */
proto.message.BEIKE.DATA.DATA.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.deserializeBinaryFromReader);
      msg.setGetershoufanglist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGetershoufanglist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.repeatedFields_ = [12,17,19];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalcount: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    returncount: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    fbqueryid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    curpage: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    hasmoredata: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    spellcheck: (f = msg.getSpellcheck()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK.toObject(includeInstance, f),
    aladincard: (f = msg.getAladincard()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD.toObject(includeInstance, f),
    adxparams: (f = msg.getAdxparams()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS.toObject(includeInstance, f),
    noresultliuzi: (f = msg.getNoresultliuzi()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI.toObject(includeInstance, f),
    noresultreason: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    lessresultreason: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.toObject, includeInstance),
    selected: (f = msg.getSelected()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.toObject(includeInstance, f),
    keyword: jspb.Message.getFieldWithDefault(msg, 14, ""),
    recommendextinfo: (f = msg.getRecommendextinfo()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.toObject(includeInstance, f),
    nearwenan: jspb.Message.getFieldWithDefault(msg, 16, ""),
    bsrecommendlistList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f,
    tdk: (f = msg.getTdk()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.toObject(includeInstance, f),
    breadcrumbsList: jspb.Message.toObjectList(msg.getBreadcrumbsList(),
    proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalcount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setReturncount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFbqueryid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurpage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHasmoredata(value);
      break;
    case 6:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK.deserializeBinaryFromReader);
      msg.setSpellcheck(value);
      break;
    case 7:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD.deserializeBinaryFromReader);
      msg.setAladincard(value);
      break;
    case 8:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS.deserializeBinaryFromReader);
      msg.setAdxparams(value);
      break;
    case 9:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI.deserializeBinaryFromReader);
      msg.setNoresultliuzi(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNoresultreason(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLessresultreason(value);
      break;
    case 12:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    case 13:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.deserializeBinaryFromReader);
      msg.setSelected(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyword(value);
      break;
    case 15:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.deserializeBinaryFromReader);
      msg.setRecommendextinfo(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setNearwenan(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.addBsrecommendlist(value);
      break;
    case 18:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.deserializeBinaryFromReader);
      msg.setTdk(value);
      break;
    case 19:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.deserializeBinaryFromReader);
      msg.addBreadcrumbs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalcount();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getReturncount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getFbqueryid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCurpage();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getHasmoredata();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getSpellcheck();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK.serializeBinaryToWriter
    );
  }
  f = message.getAladincard();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD.serializeBinaryToWriter
    );
  }
  f = message.getAdxparams();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS.serializeBinaryToWriter
    );
  }
  f = message.getNoresultliuzi();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI.serializeBinaryToWriter
    );
  }
  f = message.getNoresultreason();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getLessresultreason();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.serializeBinaryToWriter
    );
  }
  f = message.getSelected();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.serializeBinaryToWriter
    );
  }
  f = message.getKeyword();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getRecommendextinfo();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.serializeBinaryToWriter
    );
  }
  f = message.getNearwenan();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getBsrecommendlistList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      17,
      f
    );
  }
  f = message.getTdk();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.serializeBinaryToWriter
    );
  }
  f = message.getBreadcrumbsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      19,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.repeatedFields_ = [16,22,24,25,26];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardtype: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cityid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    housecode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    resblockid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    delegateid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    title: jspb.Message.getFieldWithDefault(msg, 6, ""),
    desc: jspb.Message.getFieldWithDefault(msg, 7, ""),
    bangdantitle: jspb.Message.getFieldWithDefault(msg, 8, ""),
    recodesc: jspb.Message.getFieldWithDefault(msg, 9, ""),
    totalprice: jspb.Message.getFieldWithDefault(msg, 10, ""),
    totalpricecount: jspb.Message.getFieldWithDefault(msg, 11, ""),
    unitprice: jspb.Message.getFieldWithDefault(msg, 12, ""),
    jumpurl: jspb.Message.getFieldWithDefault(msg, 13, ""),
    listpictureurl: (f = msg.getListpictureurl()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL.toObject(includeInstance, f),
    recommendreason: (f = msg.getRecommendreason()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON.toObject(includeInstance, f),
    colortagsList: jspb.Message.toObjectList(msg.getColortagsList(),
    proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.toObject, includeInstance),
    housestatus: jspb.Message.getFieldWithDefault(msg, 17, ""),
    isctypehouse: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    fbexpoid: jspb.Message.getFieldWithDefault(msg, 19, ""),
    statusswitch: (f = msg.getStatusswitch()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.toObject(includeInstance, f),
    brandtags: (f = msg.getBrandtags()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS.toObject(includeInstance, f),
    recomtagList: (f = jspb.Message.getRepeatedField(msg, 22)) == null ? undefined : f,
    hottop: (f = msg.getHottop()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.toObject(includeInstance, f),
    framepictureList: (f = jspb.Message.getRepeatedField(msg, 24)) == null ? undefined : f,
    housepictureList: (f = jspb.Message.getRepeatedField(msg, 25)) == null ? undefined : f,
    marketboothList: (f = jspb.Message.getRepeatedField(msg, 26)) == null ? undefined : f,
    poidistance: jspb.Message.getFieldWithDefault(msg, 27, ""),
    poiicon: jspb.Message.getFieldWithDefault(msg, 28, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardtype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCityid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHousecode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setResblockid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegateid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesc(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBangdantitle(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecodesc(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalprice(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalpricecount(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitprice(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setJumpurl(value);
      break;
    case 14:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL.deserializeBinaryFromReader);
      msg.setListpictureurl(value);
      break;
    case 15:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON.deserializeBinaryFromReader);
      msg.setRecommendreason(value);
      break;
    case 16:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.deserializeBinaryFromReader);
      msg.addColortags(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setHousestatus(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsctypehouse(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setFbexpoid(value);
      break;
    case 20:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.deserializeBinaryFromReader);
      msg.setStatusswitch(value);
      break;
    case 21:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS.deserializeBinaryFromReader);
      msg.setBrandtags(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecomtag(value);
      break;
    case 23:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.deserializeBinaryFromReader);
      msg.setHottop(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.addFramepicture(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.addHousepicture(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.addMarketbooth(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoidistance(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoiicon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardtype();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCityid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHousecode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getResblockid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDelegateid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDesc();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBangdantitle();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRecodesc();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTotalprice();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTotalpricecount();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getUnitprice();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getJumpurl();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getListpictureurl();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL.serializeBinaryToWriter
    );
  }
  f = message.getRecommendreason();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON.serializeBinaryToWriter
    );
  }
  f = message.getColortagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.serializeBinaryToWriter
    );
  }
  f = message.getHousestatus();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getIsctypehouse();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getFbexpoid();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getStatusswitch();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.serializeBinaryToWriter
    );
  }
  f = message.getBrandtags();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS.serializeBinaryToWriter
    );
  }
  f = message.getRecomtagList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      22,
      f
    );
  }
  f = message.getHottop();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.serializeBinaryToWriter
    );
  }
  f = message.getFramepictureList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      24,
      f
    );
  }
  f = message.getHousepictureList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      25,
      f
    );
  }
  f = message.getMarketboothList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      26,
      f
    );
  }
  f = message.getPoidistance();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getPoiicon();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    color: jspb.Message.getFieldWithDefault(msg, 3, ""),
    textcolor: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bgcolor: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextcolor(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBgcolor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTextcolor();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBgcolor();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string color = 3;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.prototype.setColor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string textColor = 4;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.prototype.getTextcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.prototype.setTextcolor = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string bgColor = 5;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.prototype.getBgcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS.prototype.setBgcolor = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.toObject = function(includeInstance, msg) {
  var f, obj = {
    isyezhutuijian: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    ishaofang: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    isyezhupay: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    isvr: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    iskey: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    isnew: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsyezhutuijian(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIshaofang(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsyezhupay(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsvr(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIskey(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsnew(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsyezhutuijian();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getIshaofang();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIsyezhupay();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIsvr();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getIskey();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIsnew();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional bool isYeZhuTuijian = 1;
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.prototype.getIsyezhutuijian = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.prototype.setIsyezhutuijian = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool isHaofang = 2;
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.prototype.getIshaofang = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.prototype.setIshaofang = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool isYezhuPay = 3;
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.prototype.getIsyezhupay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.prototype.setIsyezhupay = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool isVr = 4;
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.prototype.getIsvr = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.prototype.setIsvr = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool isKey = 5;
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.prototype.getIskey = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.prototype.setIskey = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool isNew = 6;
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.prototype.getIsnew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH.prototype.setIsnew = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.toObject = function(includeInstance, msg) {
  var f, obj = {
    dspagentucid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hottopdigv: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hottop: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDspagentucid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHottopdigv(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHottop(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDspagentucid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHottopdigv();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHottop();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional string dspAgentUcId = 1;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.prototype.getDspagentucid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.prototype.setDspagentucid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string hotTopDigV = 2;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.prototype.getHottopdigv = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.prototype.setHottopdigv = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double hotTop = 3;
 * @return {number}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.prototype.getHottop = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP.prototype.setHottop = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string cardType = 1;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getCardtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setCardtype = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cityId = 2;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getCityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setCityid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string houseCode = 3;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getHousecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setHousecode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string resblockId = 4;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getResblockid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setResblockid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string delegateId = 5;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getDelegateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setDelegateid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string title = 6;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string desc = 7;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setDesc = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string bangdanTitle = 8;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getBangdantitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setBangdantitle = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string recoDesc = 9;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getRecodesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setRecodesc = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string totalPrice = 10;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getTotalprice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setTotalprice = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string totalPriceCount = 11;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getTotalpricecount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setTotalpricecount = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string unitPrice = 12;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getUnitprice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setUnitprice = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string jumpUrl = 13;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getJumpurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setJumpurl = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional LISTPICTUREURL listPictureUrl = 14;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getListpictureurl = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL, 14));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.LISTPICTUREURL|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setListpictureurl = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.clearListpictureurl = function() {
  return this.setListpictureurl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.hasListpictureurl = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional RECOMMENDREASON recommendReason = 15;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getRecommendreason = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON, 15));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.RECOMMENDREASON|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setRecommendreason = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.clearRecommendreason = function() {
  return this.setRecommendreason(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.hasRecommendreason = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * repeated COLORTAGS colorTags = 16;
 * @return {!Array<!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS>}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getColortagsList = function() {
  return /** @type{!Array<!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS, 16));
};


/**
 * @param {!Array<!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS>} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setColortagsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS=} opt_value
 * @param {number=} opt_index
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.addColortags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.COLORTAGS, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.clearColortagsList = function() {
  return this.setColortagsList([]);
};


/**
 * optional string houseStatus = 17;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getHousestatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setHousestatus = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional bool isCtypeHouse = 18;
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getIsctypehouse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setIsctypehouse = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional string fbExpoId = 19;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getFbexpoid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setFbexpoid = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional STATUSSWITCH statusSwitch = 20;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getStatusswitch = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH, 20));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.STATUSSWITCH|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setStatusswitch = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.clearStatusswitch = function() {
  return this.setStatusswitch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.hasStatusswitch = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional BRANDTAGS brandTags = 21;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getBrandtags = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS, 21));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.BRANDTAGS|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setBrandtags = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.clearBrandtags = function() {
  return this.setBrandtags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.hasBrandtags = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * repeated string recomTag = 22;
 * @return {!Array<string>}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getRecomtagList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 22));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setRecomtagList = function(value) {
  return jspb.Message.setField(this, 22, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.addRecomtag = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 22, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.clearRecomtagList = function() {
  return this.setRecomtagList([]);
};


/**
 * optional HOTTOP hotTop = 23;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getHottop = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP, 23));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.HOTTOP|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setHottop = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.clearHottop = function() {
  return this.setHottop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.hasHottop = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * repeated string framePicture = 24;
 * @return {!Array<string>}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getFramepictureList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 24));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setFramepictureList = function(value) {
  return jspb.Message.setField(this, 24, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.addFramepicture = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 24, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.clearFramepictureList = function() {
  return this.setFramepictureList([]);
};


/**
 * repeated string housePicture = 25;
 * @return {!Array<string>}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getHousepictureList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 25));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setHousepictureList = function(value) {
  return jspb.Message.setField(this, 25, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.addHousepicture = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 25, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.clearHousepictureList = function() {
  return this.setHousepictureList([]);
};


/**
 * repeated string marketBooth = 26;
 * @return {!Array<string>}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getMarketboothList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 26));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setMarketboothList = function(value) {
  return jspb.Message.setField(this, 26, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.addMarketbooth = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 26, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.clearMarketboothList = function() {
  return this.setMarketboothList([]);
};


/**
 * optional string poiDistance = 27;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getPoidistance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setPoidistance = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string poiIcon = 28;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.getPoiicon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST.prototype.setPoiicon = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.toObject = function(includeInstance, msg) {
  var f, obj = {
    region: (f = msg.getRegion()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.toObject(includeInstance, f),
    price: (f = msg.getPrice()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE.toObject(includeInstance, f),
    room: (f = msg.getRoom()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM.toObject(includeInstance, f),
    more: (f = msg.getMore()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE.toObject(includeInstance, f),
    order: (f = msg.getOrder()) && proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.deserializeBinaryFromReader);
      msg.setRegion(value);
      break;
    case 2:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 3:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM.deserializeBinaryFromReader);
      msg.setRoom(value);
      break;
    case 4:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE.deserializeBinaryFromReader);
      msg.setMore(value);
      break;
    case 5:
      var value = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER;
      reader.readMessage(value,proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.serializeBinaryToWriter
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE.serializeBinaryToWriter
    );
  }
  f = message.getRoom();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM.serializeBinaryToWriter
    );
  }
  f = message.getMore();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE.serializeBinaryToWriter
    );
  }
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.toObject = function(includeInstance, msg) {
  var f, obj = {
    idList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lev3: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lev1: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lev2: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLev3(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLev1(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLev2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLev3();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLev1();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLev2();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * repeated string id = 1;
 * @return {!Array<string>}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.prototype.getIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.prototype.setIdList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.prototype.addId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.prototype.clearIdList = function() {
  return this.setIdList([]);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string lev3 = 3;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.prototype.getLev3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.prototype.setLev3 = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string lev1 = 4;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.prototype.getLev1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.prototype.setLev1 = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string lev2 = 5;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.prototype.getLev2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION.prototype.setLev2 = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional REGION region = 1;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.getRegion = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION, 1));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.REGION|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.setRegion = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.clearRegion = function() {
  return this.setRegion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.hasRegion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PRICE price = 2;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.getPrice = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE, 2));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.PRICE|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ROOM room = 3;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.getRoom = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM, 3));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ROOM|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.setRoom = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.clearRoom = function() {
  return this.setRoom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.hasRoom = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional MORE more = 4;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.getMore = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE, 4));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.MORE|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.setMore = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.clearMore = function() {
  return this.setMore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.hasMore = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ORDER order = 5;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.getOrder = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER, 5));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.ORDER|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.toObject = function(includeInstance, msg) {
  var f, obj = {
    bizcircleidList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addBizcircleid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBizcircleidList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string bizcircleId = 1;
 * @return {!Array<string>}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.prototype.getBizcircleidList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.prototype.setBizcircleidList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.prototype.addBizcircleid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO.prototype.clearBizcircleidList = function() {
  return this.setBizcircleidList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    keywords: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeywords(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKeywords();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string keywords = 2;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.prototype.getKeywords = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.prototype.setKeywords = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.prototype.toObject = function(opt_includeInstance) {
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    url: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS;
  return proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double totalCount = 1;
 * @return {number}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getTotalcount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setTotalcount = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double returnCount = 2;
 * @return {number}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getReturncount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setReturncount = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string fbQueryId = 3;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getFbqueryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setFbqueryid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double curPage = 4;
 * @return {number}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getCurpage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setCurpage = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double hasMoreData = 5;
 * @return {number}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getHasmoredata = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setHasmoredata = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional SPELLCHECK spellCheck = 6;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getSpellcheck = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK, 6));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SPELLCHECK|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setSpellcheck = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.clearSpellcheck = function() {
  return this.setSpellcheck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.hasSpellcheck = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ALADINCARD aladinCard = 7;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getAladincard = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD, 7));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ALADINCARD|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setAladincard = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.clearAladincard = function() {
  return this.setAladincard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.hasAladincard = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ADXPARAMS adxParams = 8;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getAdxparams = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS, 8));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.ADXPARAMS|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setAdxparams = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.clearAdxparams = function() {
  return this.setAdxparams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.hasAdxparams = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional NORESULTLIUZI noResultLiuzi = 9;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getNoresultliuzi = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI, 9));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.NORESULTLIUZI|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setNoresultliuzi = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.clearNoresultliuzi = function() {
  return this.setNoresultliuzi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.hasNoresultliuzi = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double noResultReason = 10;
 * @return {number}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getNoresultreason = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setNoresultreason = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double lessResultReason = 11;
 * @return {number}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getLessresultreason = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setLessresultreason = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * repeated LIST list = 12;
 * @return {!Array<!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST>}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getListList = function() {
  return /** @type{!Array<!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST, 12));
};


/**
 * @param {!Array<!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST>} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST=} opt_value
 * @param {number=} opt_index
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.LIST, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.clearListList = function() {
  return this.setListList([]);
};


/**
 * optional SELECTED selected = 13;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getSelected = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED, 13));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.SELECTED|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setSelected = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.clearSelected = function() {
  return this.setSelected(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.hasSelected = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string keyword = 14;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setKeyword = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional RECOMMENDEXTINFO recommendExtInfo = 15;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getRecommendextinfo = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO, 15));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.RECOMMENDEXTINFO|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setRecommendextinfo = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.clearRecommendextinfo = function() {
  return this.setRecommendextinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.hasRecommendextinfo = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string nearWenan = 16;
 * @return {string}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getNearwenan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setNearwenan = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * repeated string bsRecommendList = 17;
 * @return {!Array<string>}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getBsrecommendlistList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setBsrecommendlistList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.addBsrecommendlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.clearBsrecommendlistList = function() {
  return this.setBsrecommendlistList([]);
};


/**
 * optional TDK tdk = 18;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getTdk = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK, 18));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.TDK|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setTdk = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.clearTdk = function() {
  return this.setTdk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.hasTdk = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * repeated BREADCRUMBS breadcrumbs = 19;
 * @return {!Array<!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS>}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.getBreadcrumbsList = function() {
  return /** @type{!Array<!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS, 19));
};


/**
 * @param {!Array<!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS>} value
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
*/
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.setBreadcrumbsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 19, value);
};


/**
 * @param {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS=} opt_value
 * @param {number=} opt_index
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS}
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.addBreadcrumbs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.BREADCRUMBS, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} returns this
 */
proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST.prototype.clearBreadcrumbsList = function() {
  return this.setBreadcrumbsList([]);
};


/**
 * optional GETERSHOUFANGLIST getErShouFangList = 1;
 * @return {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST}
 */
proto.message.BEIKE.DATA.DATA.prototype.getGetershoufanglist = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST, 1));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA.GETERSHOUFANGLIST|undefined} value
 * @return {!proto.message.BEIKE.DATA.DATA} returns this
*/
proto.message.BEIKE.DATA.DATA.prototype.setGetershoufanglist = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA.DATA} returns this
 */
proto.message.BEIKE.DATA.DATA.prototype.clearGetershoufanglist = function() {
  return this.setGetershoufanglist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.DATA.prototype.hasGetershoufanglist = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double errno = 1;
 * @return {number}
 */
proto.message.BEIKE.DATA.prototype.getErrno = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.message.BEIKE.DATA} returns this
 */
proto.message.BEIKE.DATA.prototype.setErrno = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.message.BEIKE.DATA.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE.DATA} returns this
 */
proto.message.BEIKE.DATA.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional DATA data = 3;
 * @return {?proto.message.BEIKE.DATA.DATA}
 */
proto.message.BEIKE.DATA.prototype.getData = function() {
  return /** @type{?proto.message.BEIKE.DATA.DATA} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA.DATA, 3));
};


/**
 * @param {?proto.message.BEIKE.DATA.DATA|undefined} value
 * @return {!proto.message.BEIKE.DATA} returns this
*/
proto.message.BEIKE.DATA.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE.DATA} returns this
 */
proto.message.BEIKE.DATA.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.DATA.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string errkeys = 4;
 * @return {!Array<string>}
 */
proto.message.BEIKE.DATA.prototype.getErrkeysList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.message.BEIKE.DATA} returns this
 */
proto.message.BEIKE.DATA.prototype.setErrkeysList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.message.BEIKE.DATA} returns this
 */
proto.message.BEIKE.DATA.prototype.addErrkeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.message.BEIKE.DATA} returns this
 */
proto.message.BEIKE.DATA.prototype.clearErrkeysList = function() {
  return this.setErrkeysList([]);
};


/**
 * optional double code = 1;
 * @return {number}
 */
proto.message.BEIKE.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.message.BEIKE} returns this
 */
proto.message.BEIKE.prototype.setCode = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional DATA data = 2;
 * @return {?proto.message.BEIKE.DATA}
 */
proto.message.BEIKE.prototype.getData = function() {
  return /** @type{?proto.message.BEIKE.DATA} */ (
    jspb.Message.getWrapperField(this, proto.message.BEIKE.DATA, 2));
};


/**
 * @param {?proto.message.BEIKE.DATA|undefined} value
 * @return {!proto.message.BEIKE} returns this
*/
proto.message.BEIKE.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.message.BEIKE} returns this
 */
proto.message.BEIKE.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.message.BEIKE.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string msg = 3;
 * @return {string}
 */
proto.message.BEIKE.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.message.BEIKE} returns this
 */
proto.message.BEIKE.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.message);
