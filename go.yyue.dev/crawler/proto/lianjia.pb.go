// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.10.1
// source: crawler/lianjia.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// HouseSummary is house list info summary
type HouseSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HouseNo     string `protobuf:"bytes,2,opt,name=house_no,json=houseNo,proto3" json:"house_no,omitempty"`
	Url         string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Title       string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	TotalPrice  string `protobuf:"bytes,5,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	UnitPrice   string `protobuf:"bytes,6,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	Plot        string `protobuf:"bytes,7,opt,name=plot,proto3" json:"plot,omitempty"` // 小区
	Region      string `protobuf:"bytes,8,opt,name=region,proto3" json:"region,omitempty"`
	Layout      string `protobuf:"bytes,9,opt,name=layout,proto3" json:"layout,omitempty"`
	Area        string `protobuf:"bytes,10,opt,name=area,proto3" json:"area,omitempty"`
	Face        string `protobuf:"bytes,11,opt,name=face,proto3" json:"face,omitempty"`                                  // 房屋朝向
	Decoration  string `protobuf:"bytes,12,opt,name=decoration,proto3" json:"decoration,omitempty"`                      // 装修情况
	Floor       string `protobuf:"bytes,13,opt,name=floor,proto3" json:"floor,omitempty"`                                // 所在楼层
	HouseYear   string `protobuf:"bytes,14,opt,name=house_year,json=houseYear,proto3" json:"house_year,omitempty"`       // 房屋年限
	StructBuild string `protobuf:"bytes,15,opt,name=struct_build,json=structBuild,proto3" json:"struct_build,omitempty"` // 建筑结构
	Image       string `protobuf:"bytes,16,opt,name=image,proto3" json:"image,omitempty"`
	Follow      int32  `protobuf:"varint,17,opt,name=follow,proto3" json:"follow,omitempty"`
	ReleaseTime string `protobuf:"bytes,18,opt,name=release_time,json=releaseTime,proto3" json:"release_time,omitempty"`
	// tags 1: 必看好房 2: 房本满五年 4: 房本满两年 8: VR房源 16: 近地铁 32: 随时看房
	Tags int32 `protobuf:"varint,19,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (x *HouseSummary) Reset() {
	*x = HouseSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_lianjia_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HouseSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HouseSummary) ProtoMessage() {}

func (x *HouseSummary) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_lianjia_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HouseSummary.ProtoReflect.Descriptor instead.
func (*HouseSummary) Descriptor() ([]byte, []int) {
	return file_crawler_lianjia_proto_rawDescGZIP(), []int{0}
}

func (x *HouseSummary) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HouseSummary) GetHouseNo() string {
	if x != nil {
		return x.HouseNo
	}
	return ""
}

func (x *HouseSummary) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HouseSummary) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HouseSummary) GetTotalPrice() string {
	if x != nil {
		return x.TotalPrice
	}
	return ""
}

func (x *HouseSummary) GetUnitPrice() string {
	if x != nil {
		return x.UnitPrice
	}
	return ""
}

func (x *HouseSummary) GetPlot() string {
	if x != nil {
		return x.Plot
	}
	return ""
}

func (x *HouseSummary) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *HouseSummary) GetLayout() string {
	if x != nil {
		return x.Layout
	}
	return ""
}

func (x *HouseSummary) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *HouseSummary) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *HouseSummary) GetDecoration() string {
	if x != nil {
		return x.Decoration
	}
	return ""
}

func (x *HouseSummary) GetFloor() string {
	if x != nil {
		return x.Floor
	}
	return ""
}

func (x *HouseSummary) GetHouseYear() string {
	if x != nil {
		return x.HouseYear
	}
	return ""
}

func (x *HouseSummary) GetStructBuild() string {
	if x != nil {
		return x.StructBuild
	}
	return ""
}

func (x *HouseSummary) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *HouseSummary) GetFollow() int32 {
	if x != nil {
		return x.Follow
	}
	return 0
}

func (x *HouseSummary) GetReleaseTime() string {
	if x != nil {
		return x.ReleaseTime
	}
	return ""
}

func (x *HouseSummary) GetTags() int32 {
	if x != nil {
		return x.Tags
	}
	return 0
}

type House struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //
	HouseNo              string                `protobuf:"bytes,2,opt,name=house_no,json=houseNo,proto3" json:"house_no,omitempty"`
	HouseInfo            *HouseInfo            `protobuf:"bytes,3,opt,name=house_info,json=houseInfo,proto3" json:"house_info,omitempty"`
	HouseBaseInfo        *HouseBaseInfo        `protobuf:"bytes,4,opt,name=house_base_info,json=houseBaseInfo,proto3" json:"house_base_info,omitempty"`
	HouseTransactionInfo *HouseTransactionInfo `protobuf:"bytes,5,opt,name=house_transaction_info,json=houseTransactionInfo,proto3" json:"house_transaction_info,omitempty"`
	HousePics            []*HousePic           `protobuf:"bytes,6,rep,name=house_pics,json=housePics,proto3" json:"house_pics,omitempty"`
}

func (x *House) Reset() {
	*x = House{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_lianjia_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *House) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*House) ProtoMessage() {}

func (x *House) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_lianjia_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use House.ProtoReflect.Descriptor instead.
func (*House) Descriptor() ([]byte, []int) {
	return file_crawler_lianjia_proto_rawDescGZIP(), []int{1}
}

func (x *House) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *House) GetHouseNo() string {
	if x != nil {
		return x.HouseNo
	}
	return ""
}

func (x *House) GetHouseInfo() *HouseInfo {
	if x != nil {
		return x.HouseInfo
	}
	return nil
}

func (x *House) GetHouseBaseInfo() *HouseBaseInfo {
	if x != nil {
		return x.HouseBaseInfo
	}
	return nil
}

func (x *House) GetHouseTransactionInfo() *HouseTransactionInfo {
	if x != nil {
		return x.HouseTransactionInfo
	}
	return nil
}

func (x *House) GetHousePics() []*HousePic {
	if x != nil {
		return x.HousePics
	}
	return nil
}

// 房子信息
type HouseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                   // id
	HouseNo    string `protobuf:"bytes,2,opt,name=house_no,json=houseNo,proto3" json:"house_no,omitempty"`          // house number
	Url        string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`                                 // url
	Title      string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                             // 标题
	SubTitle   string `protobuf:"bytes,5,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`       // 副标题
	Region     string `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`                           // 小区
	TotalPrice string `protobuf:"bytes,7,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"` // 总价
	UnitPrice  string `protobuf:"bytes,8,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	RoomInfo   string `protobuf:"bytes,9,opt,name=room_info,json=roomInfo,proto3" json:"room_info,omitempty"`
	RoomSub    string `protobuf:"bytes,10,opt,name=room_sub,json=roomSub,proto3" json:"room_sub,omitempty"` //
	TypeInfo   string `protobuf:"bytes,11,opt,name=type_info,json=typeInfo,proto3" json:"type_info,omitempty"`
	TypeSub    string `protobuf:"bytes,12,opt,name=type_sub,json=typeSub,proto3" json:"type_sub,omitempty"`
	AreaInfo   string `protobuf:"bytes,13,opt,name=area_info,json=areaInfo,proto3" json:"area_info,omitempty"`
	AreaSub    string `protobuf:"bytes,14,opt,name=area_sub,json=areaSub,proto3" json:"area_sub,omitempty"`
}

func (x *HouseInfo) Reset() {
	*x = HouseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_lianjia_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HouseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HouseInfo) ProtoMessage() {}

func (x *HouseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_lianjia_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HouseInfo.ProtoReflect.Descriptor instead.
func (*HouseInfo) Descriptor() ([]byte, []int) {
	return file_crawler_lianjia_proto_rawDescGZIP(), []int{2}
}

func (x *HouseInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HouseInfo) GetHouseNo() string {
	if x != nil {
		return x.HouseNo
	}
	return ""
}

func (x *HouseInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HouseInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HouseInfo) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *HouseInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *HouseInfo) GetTotalPrice() string {
	if x != nil {
		return x.TotalPrice
	}
	return ""
}

func (x *HouseInfo) GetUnitPrice() string {
	if x != nil {
		return x.UnitPrice
	}
	return ""
}

func (x *HouseInfo) GetRoomInfo() string {
	if x != nil {
		return x.RoomInfo
	}
	return ""
}

func (x *HouseInfo) GetRoomSub() string {
	if x != nil {
		return x.RoomSub
	}
	return ""
}

func (x *HouseInfo) GetTypeInfo() string {
	if x != nil {
		return x.TypeInfo
	}
	return ""
}

func (x *HouseInfo) GetTypeSub() string {
	if x != nil {
		return x.TypeSub
	}
	return ""
}

func (x *HouseInfo) GetAreaInfo() string {
	if x != nil {
		return x.AreaInfo
	}
	return ""
}

func (x *HouseInfo) GetAreaSub() string {
	if x != nil {
		return x.AreaSub
	}
	return ""
}

// 基本信息
type HouseBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                             // id
	HouseNo       string `protobuf:"bytes,2,opt,name=house_no,json=houseNo,proto3" json:"house_no,omitempty"`                    // house number
	Layout        string `protobuf:"bytes,3,opt,name=layout,proto3" json:"layout,omitempty"`                                     // 房屋户型
	Floor         string `protobuf:"bytes,4,opt,name=floor,proto3" json:"floor,omitempty"`                                       // 所在楼层
	AreaBuild     string `protobuf:"bytes,5,opt,name=area_build,json=areaBuild,proto3" json:"area_build,omitempty"`              // 建筑面积
	StructHouse   string `protobuf:"bytes,6,opt,name=struct_house,json=structHouse,proto3" json:"struct_house,omitempty"`        // 户型结构
	AreaInner     string `protobuf:"bytes,7,opt,name=area_inner,json=areaInner,proto3" json:"area_inner,omitempty"`              // 套内面积
	BuildType     string `protobuf:"bytes,8,opt,name=build_type,json=buildType,proto3" json:"build_type,omitempty"`              // 建筑类型
	Face          string `protobuf:"bytes,9,opt,name=face,proto3" json:"face,omitempty"`                                         // 房屋朝向
	StructBuild   string `protobuf:"bytes,10,opt,name=struct_build,json=structBuild,proto3" json:"struct_build,omitempty"`       // 建筑结构
	Decoration    string `protobuf:"bytes,11,opt,name=decoration,proto3" json:"decoration,omitempty"`                            // 装修情况
	ElevatorRatio string `protobuf:"bytes,12,opt,name=elevator_ratio,json=elevatorRatio,proto3" json:"elevator_ratio,omitempty"` // 梯户比例
	Elevator      string `protobuf:"bytes,13,opt,name=elevator,proto3" json:"elevator,omitempty"`                                // 配备电梯
	Property      string `protobuf:"bytes,14,opt,name=property,proto3" json:"property,omitempty"`                                // 产权年限
}

func (x *HouseBaseInfo) Reset() {
	*x = HouseBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_lianjia_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HouseBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HouseBaseInfo) ProtoMessage() {}

func (x *HouseBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_lianjia_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HouseBaseInfo.ProtoReflect.Descriptor instead.
func (*HouseBaseInfo) Descriptor() ([]byte, []int) {
	return file_crawler_lianjia_proto_rawDescGZIP(), []int{3}
}

func (x *HouseBaseInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HouseBaseInfo) GetHouseNo() string {
	if x != nil {
		return x.HouseNo
	}
	return ""
}

func (x *HouseBaseInfo) GetLayout() string {
	if x != nil {
		return x.Layout
	}
	return ""
}

func (x *HouseBaseInfo) GetFloor() string {
	if x != nil {
		return x.Floor
	}
	return ""
}

func (x *HouseBaseInfo) GetAreaBuild() string {
	if x != nil {
		return x.AreaBuild
	}
	return ""
}

func (x *HouseBaseInfo) GetStructHouse() string {
	if x != nil {
		return x.StructHouse
	}
	return ""
}

func (x *HouseBaseInfo) GetAreaInner() string {
	if x != nil {
		return x.AreaInner
	}
	return ""
}

func (x *HouseBaseInfo) GetBuildType() string {
	if x != nil {
		return x.BuildType
	}
	return ""
}

func (x *HouseBaseInfo) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *HouseBaseInfo) GetStructBuild() string {
	if x != nil {
		return x.StructBuild
	}
	return ""
}

func (x *HouseBaseInfo) GetDecoration() string {
	if x != nil {
		return x.Decoration
	}
	return ""
}

func (x *HouseBaseInfo) GetElevatorRatio() string {
	if x != nil {
		return x.ElevatorRatio
	}
	return ""
}

func (x *HouseBaseInfo) GetElevator() string {
	if x != nil {
		return x.Elevator
	}
	return ""
}

func (x *HouseBaseInfo) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

// 交易信息
type HouseTransactionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                     // id
	HouseNo          string `protobuf:"bytes,2,opt,name=house_no,json=houseNo,proto3" json:"house_no,omitempty"`                            // house number
	ListingTime      string `protobuf:"bytes,3,opt,name=listing_time,json=listingTime,proto3" json:"listing_time,omitempty"`                // 挂牌时间
	TradingAuthority string `protobuf:"bytes,4,opt,name=trading_authority,json=tradingAuthority,proto3" json:"trading_authority,omitempty"` // 交易权属
	LastTransaction  string `protobuf:"bytes,5,opt,name=last_transaction,json=lastTransaction,proto3" json:"last_transaction,omitempty"`    // 上次交易
	HousingPurposes  string `protobuf:"bytes,6,opt,name=housing_purposes,json=housingPurposes,proto3" json:"housing_purposes,omitempty"`    // 房屋用途
	HouseYear        string `protobuf:"bytes,7,opt,name=house_year,json=houseYear,proto3" json:"house_year,omitempty"`                      // 房屋年限
	PropertyRights   string `protobuf:"bytes,8,opt,name=property_rights,json=propertyRights,proto3" json:"property_rights,omitempty"`       // 产权所属
	MortgageInfo     string `protobuf:"bytes,9,opt,name=mortgage_info,json=mortgageInfo,proto3" json:"mortgage_info,omitempty"`             // 抵押信息
	DocumentPhoto    string `protobuf:"bytes,10,opt,name=document_photo,json=documentPhoto,proto3" json:"document_photo,omitempty"`         // 房本备件
}

func (x *HouseTransactionInfo) Reset() {
	*x = HouseTransactionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_lianjia_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HouseTransactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HouseTransactionInfo) ProtoMessage() {}

func (x *HouseTransactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_lianjia_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HouseTransactionInfo.ProtoReflect.Descriptor instead.
func (*HouseTransactionInfo) Descriptor() ([]byte, []int) {
	return file_crawler_lianjia_proto_rawDescGZIP(), []int{4}
}

func (x *HouseTransactionInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HouseTransactionInfo) GetHouseNo() string {
	if x != nil {
		return x.HouseNo
	}
	return ""
}

func (x *HouseTransactionInfo) GetListingTime() string {
	if x != nil {
		return x.ListingTime
	}
	return ""
}

func (x *HouseTransactionInfo) GetTradingAuthority() string {
	if x != nil {
		return x.TradingAuthority
	}
	return ""
}

func (x *HouseTransactionInfo) GetLastTransaction() string {
	if x != nil {
		return x.LastTransaction
	}
	return ""
}

func (x *HouseTransactionInfo) GetHousingPurposes() string {
	if x != nil {
		return x.HousingPurposes
	}
	return ""
}

func (x *HouseTransactionInfo) GetHouseYear() string {
	if x != nil {
		return x.HouseYear
	}
	return ""
}

func (x *HouseTransactionInfo) GetPropertyRights() string {
	if x != nil {
		return x.PropertyRights
	}
	return ""
}

func (x *HouseTransactionInfo) GetMortgageInfo() string {
	if x != nil {
		return x.MortgageInfo
	}
	return ""
}

func (x *HouseTransactionInfo) GetDocumentPhoto() string {
	if x != nil {
		return x.DocumentPhoto
	}
	return ""
}

// 照片
type HousePic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HouseNo      string `protobuf:"bytes,2,opt,name=house_no,json=houseNo,proto3" json:"house_no,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PicSmallUrl  string `protobuf:"bytes,4,opt,name=pic_small_url,json=picSmallUrl,proto3" json:"pic_small_url,omitempty"`
	PicNormalUrl string `protobuf:"bytes,5,opt,name=pic_normal_url,json=picNormalUrl,proto3" json:"pic_normal_url,omitempty"`
	PicLargeUrl  string `protobuf:"bytes,6,opt,name=pic_large_url,json=picLargeUrl,proto3" json:"pic_large_url,omitempty"`
}

func (x *HousePic) Reset() {
	*x = HousePic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_lianjia_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HousePic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HousePic) ProtoMessage() {}

func (x *HousePic) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_lianjia_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HousePic.ProtoReflect.Descriptor instead.
func (*HousePic) Descriptor() ([]byte, []int) {
	return file_crawler_lianjia_proto_rawDescGZIP(), []int{5}
}

func (x *HousePic) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HousePic) GetHouseNo() string {
	if x != nil {
		return x.HouseNo
	}
	return ""
}

func (x *HousePic) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *HousePic) GetPicSmallUrl() string {
	if x != nil {
		return x.PicSmallUrl
	}
	return ""
}

func (x *HousePic) GetPicNormalUrl() string {
	if x != nil {
		return x.PicNormalUrl
	}
	return ""
}

func (x *HousePic) GetPicLargeUrl() string {
	if x != nil {
		return x.PicLargeUrl
	}
	return ""
}

var File_crawler_lianjia_proto protoreflect.FileDescriptor

var file_crawler_lianjia_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x61, 0x6e, 0x6a, 0x69,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6c, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x61,
	0x22, 0xea, 0x03, 0x0a, 0x0c, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x61, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x59, 0x65, 0x61, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x5f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xac, 0x02,
	0x0a, 0x05, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x4e, 0x6f, 0x12, 0x31, 0x0a, 0x0a, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x61,
	0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x0f, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x61, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x53, 0x0a, 0x16, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x61, 0x2e,
	0x48, 0x6f, 0x75, 0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x0a, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6c, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x61, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x69,
	0x63, 0x52, 0x09, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x69, 0x63, 0x73, 0x22, 0xfb, 0x02, 0x0a,
	0x09, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x75, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x73, 0x75, 0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x53,
	0x75, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x72, 0x65, 0x61, 0x53, 0x75, 0x62, 0x22, 0x9e, 0x03, 0x0a, 0x0d, 0x48,
	0x6f, 0x75, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x65, 0x61, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x5f, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x65,
	0x61, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e,
	0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0xfb, 0x02, 0x0a, 0x14,
	0x48, 0x6f, 0x75, 0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x29, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x68, 0x6f,
	0x75, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x68, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x75, 0x72,
	0x70, 0x6f, 0x73, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x59, 0x65, 0x61, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x6f, 0x72, 0x74, 0x67, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x72, 0x74, 0x67, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x01, 0x0a, 0x08, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x50, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f,
	0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e,
	0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x69, 0x63, 0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x69, 0x63, 0x53,
	0x6d, 0x61, 0x6c, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x69, 0x63, 0x5f, 0x6e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x69, 0x63, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a,
	0x0d, 0x70, 0x69, 0x63, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x69, 0x63, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x42, 0x1b, 0x5a, 0x19, 0x67, 0x6f, 0x2e, 0x79, 0x79, 0x75, 0x65, 0x2e, 0x64, 0x65, 0x76,
	0x2f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_crawler_lianjia_proto_rawDescOnce sync.Once
	file_crawler_lianjia_proto_rawDescData = file_crawler_lianjia_proto_rawDesc
)

func file_crawler_lianjia_proto_rawDescGZIP() []byte {
	file_crawler_lianjia_proto_rawDescOnce.Do(func() {
		file_crawler_lianjia_proto_rawDescData = protoimpl.X.CompressGZIP(file_crawler_lianjia_proto_rawDescData)
	})
	return file_crawler_lianjia_proto_rawDescData
}

var file_crawler_lianjia_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_crawler_lianjia_proto_goTypes = []interface{}{
	(*HouseSummary)(nil),         // 0: lianjia.HouseSummary
	(*House)(nil),                // 1: lianjia.House
	(*HouseInfo)(nil),            // 2: lianjia.HouseInfo
	(*HouseBaseInfo)(nil),        // 3: lianjia.HouseBaseInfo
	(*HouseTransactionInfo)(nil), // 4: lianjia.HouseTransactionInfo
	(*HousePic)(nil),             // 5: lianjia.HousePic
}
var file_crawler_lianjia_proto_depIdxs = []int32{
	2, // 0: lianjia.House.house_info:type_name -> lianjia.HouseInfo
	3, // 1: lianjia.House.house_base_info:type_name -> lianjia.HouseBaseInfo
	4, // 2: lianjia.House.house_transaction_info:type_name -> lianjia.HouseTransactionInfo
	5, // 3: lianjia.House.house_pics:type_name -> lianjia.HousePic
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_crawler_lianjia_proto_init() }
func file_crawler_lianjia_proto_init() {
	if File_crawler_lianjia_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_crawler_lianjia_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HouseSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_lianjia_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*House); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_lianjia_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HouseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_lianjia_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HouseBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_lianjia_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HouseTransactionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_lianjia_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HousePic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crawler_lianjia_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_crawler_lianjia_proto_goTypes,
		DependencyIndexes: file_crawler_lianjia_proto_depIdxs,
		MessageInfos:      file_crawler_lianjia_proto_msgTypes,
	}.Build()
	File_crawler_lianjia_proto = out.File
	file_crawler_lianjia_proto_rawDesc = nil
	file_crawler_lianjia_proto_goTypes = nil
	file_crawler_lianjia_proto_depIdxs = nil
}
