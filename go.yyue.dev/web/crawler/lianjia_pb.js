// source: crawler/lianjia.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.lianjia.House', null, global);
goog.exportSymbol('proto.lianjia.HouseBaseInfo', null, global);
goog.exportSymbol('proto.lianjia.HouseInfo', null, global);
goog.exportSymbol('proto.lianjia.HousePic', null, global);
goog.exportSymbol('proto.lianjia.HouseTransactionInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lianjia.House = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.lianjia.House.repeatedFields_, null);
};
goog.inherits(proto.lianjia.House, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lianjia.House.displayName = 'proto.lianjia.House';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lianjia.HouseInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lianjia.HouseInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lianjia.HouseInfo.displayName = 'proto.lianjia.HouseInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lianjia.HouseBaseInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lianjia.HouseBaseInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lianjia.HouseBaseInfo.displayName = 'proto.lianjia.HouseBaseInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lianjia.HouseTransactionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lianjia.HouseTransactionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lianjia.HouseTransactionInfo.displayName = 'proto.lianjia.HouseTransactionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.lianjia.HousePic = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.lianjia.HousePic, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.lianjia.HousePic.displayName = 'proto.lianjia.HousePic';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.lianjia.House.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lianjia.House.prototype.toObject = function(opt_includeInstance) {
  return proto.lianjia.House.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lianjia.House} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lianjia.House.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    houseNo: jspb.Message.getFieldWithDefault(msg, 2, ""),
    houseInfo: (f = msg.getHouseInfo()) && proto.lianjia.HouseInfo.toObject(includeInstance, f),
    houseBaseInfo: (f = msg.getHouseBaseInfo()) && proto.lianjia.HouseBaseInfo.toObject(includeInstance, f),
    houseTransactionInfo: (f = msg.getHouseTransactionInfo()) && proto.lianjia.HouseTransactionInfo.toObject(includeInstance, f),
    housePicsList: jspb.Message.toObjectList(msg.getHousePicsList(),
    proto.lianjia.HousePic.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lianjia.House}
 */
proto.lianjia.House.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lianjia.House;
  return proto.lianjia.House.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lianjia.House} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lianjia.House}
 */
proto.lianjia.House.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHouseNo(value);
      break;
    case 3:
      var value = new proto.lianjia.HouseInfo;
      reader.readMessage(value,proto.lianjia.HouseInfo.deserializeBinaryFromReader);
      msg.setHouseInfo(value);
      break;
    case 4:
      var value = new proto.lianjia.HouseBaseInfo;
      reader.readMessage(value,proto.lianjia.HouseBaseInfo.deserializeBinaryFromReader);
      msg.setHouseBaseInfo(value);
      break;
    case 5:
      var value = new proto.lianjia.HouseTransactionInfo;
      reader.readMessage(value,proto.lianjia.HouseTransactionInfo.deserializeBinaryFromReader);
      msg.setHouseTransactionInfo(value);
      break;
    case 6:
      var value = new proto.lianjia.HousePic;
      reader.readMessage(value,proto.lianjia.HousePic.deserializeBinaryFromReader);
      msg.addHousePics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lianjia.House.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lianjia.House.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lianjia.House} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lianjia.House.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHouseNo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHouseInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.lianjia.HouseInfo.serializeBinaryToWriter
    );
  }
  f = message.getHouseBaseInfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.lianjia.HouseBaseInfo.serializeBinaryToWriter
    );
  }
  f = message.getHouseTransactionInfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.lianjia.HouseTransactionInfo.serializeBinaryToWriter
    );
  }
  f = message.getHousePicsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.lianjia.HousePic.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.lianjia.House.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.House} returns this
 */
proto.lianjia.House.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string house_no = 2;
 * @return {string}
 */
proto.lianjia.House.prototype.getHouseNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.House} returns this
 */
proto.lianjia.House.prototype.setHouseNo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional HouseInfo house_info = 3;
 * @return {?proto.lianjia.HouseInfo}
 */
proto.lianjia.House.prototype.getHouseInfo = function() {
  return /** @type{?proto.lianjia.HouseInfo} */ (
    jspb.Message.getWrapperField(this, proto.lianjia.HouseInfo, 3));
};


/**
 * @param {?proto.lianjia.HouseInfo|undefined} value
 * @return {!proto.lianjia.House} returns this
*/
proto.lianjia.House.prototype.setHouseInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lianjia.House} returns this
 */
proto.lianjia.House.prototype.clearHouseInfo = function() {
  return this.setHouseInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lianjia.House.prototype.hasHouseInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional HouseBaseInfo house_base_info = 4;
 * @return {?proto.lianjia.HouseBaseInfo}
 */
proto.lianjia.House.prototype.getHouseBaseInfo = function() {
  return /** @type{?proto.lianjia.HouseBaseInfo} */ (
    jspb.Message.getWrapperField(this, proto.lianjia.HouseBaseInfo, 4));
};


/**
 * @param {?proto.lianjia.HouseBaseInfo|undefined} value
 * @return {!proto.lianjia.House} returns this
*/
proto.lianjia.House.prototype.setHouseBaseInfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lianjia.House} returns this
 */
proto.lianjia.House.prototype.clearHouseBaseInfo = function() {
  return this.setHouseBaseInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lianjia.House.prototype.hasHouseBaseInfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional HouseTransactionInfo house_transaction_info = 5;
 * @return {?proto.lianjia.HouseTransactionInfo}
 */
proto.lianjia.House.prototype.getHouseTransactionInfo = function() {
  return /** @type{?proto.lianjia.HouseTransactionInfo} */ (
    jspb.Message.getWrapperField(this, proto.lianjia.HouseTransactionInfo, 5));
};


/**
 * @param {?proto.lianjia.HouseTransactionInfo|undefined} value
 * @return {!proto.lianjia.House} returns this
*/
proto.lianjia.House.prototype.setHouseTransactionInfo = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.lianjia.House} returns this
 */
proto.lianjia.House.prototype.clearHouseTransactionInfo = function() {
  return this.setHouseTransactionInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.lianjia.House.prototype.hasHouseTransactionInfo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated HousePic house_pics = 6;
 * @return {!Array<!proto.lianjia.HousePic>}
 */
proto.lianjia.House.prototype.getHousePicsList = function() {
  return /** @type{!Array<!proto.lianjia.HousePic>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.lianjia.HousePic, 6));
};


/**
 * @param {!Array<!proto.lianjia.HousePic>} value
 * @return {!proto.lianjia.House} returns this
*/
proto.lianjia.House.prototype.setHousePicsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.lianjia.HousePic=} opt_value
 * @param {number=} opt_index
 * @return {!proto.lianjia.HousePic}
 */
proto.lianjia.House.prototype.addHousePics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.lianjia.HousePic, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.lianjia.House} returns this
 */
proto.lianjia.House.prototype.clearHousePicsList = function() {
  return this.setHousePicsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lianjia.HouseInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.lianjia.HouseInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lianjia.HouseInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lianjia.HouseInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    houseNo: jspb.Message.getFieldWithDefault(msg, 2, ""),
    url: jspb.Message.getFieldWithDefault(msg, 3, ""),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    subTitle: jspb.Message.getFieldWithDefault(msg, 5, ""),
    region: jspb.Message.getFieldWithDefault(msg, 6, ""),
    totalPrice: jspb.Message.getFieldWithDefault(msg, 7, ""),
    unitPrice: jspb.Message.getFieldWithDefault(msg, 8, ""),
    roomInfo: jspb.Message.getFieldWithDefault(msg, 9, ""),
    roomSub: jspb.Message.getFieldWithDefault(msg, 10, ""),
    typeInfo: jspb.Message.getFieldWithDefault(msg, 11, ""),
    typeSub: jspb.Message.getFieldWithDefault(msg, 12, ""),
    areaInfo: jspb.Message.getFieldWithDefault(msg, 13, ""),
    areaSub: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lianjia.HouseInfo}
 */
proto.lianjia.HouseInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lianjia.HouseInfo;
  return proto.lianjia.HouseInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lianjia.HouseInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lianjia.HouseInfo}
 */
proto.lianjia.HouseInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHouseNo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalPrice(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitPrice(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomInfo(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomSub(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeInfo(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeSub(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAreaInfo(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setAreaSub(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lianjia.HouseInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lianjia.HouseInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lianjia.HouseInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lianjia.HouseInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHouseNo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSubTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTotalPrice();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUnitPrice();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRoomInfo();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getRoomSub();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTypeInfo();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTypeSub();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getAreaInfo();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getAreaSub();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.lianjia.HouseInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseInfo} returns this
 */
proto.lianjia.HouseInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string house_no = 2;
 * @return {string}
 */
proto.lianjia.HouseInfo.prototype.getHouseNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseInfo} returns this
 */
proto.lianjia.HouseInfo.prototype.setHouseNo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.lianjia.HouseInfo.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseInfo} returns this
 */
proto.lianjia.HouseInfo.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.lianjia.HouseInfo.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseInfo} returns this
 */
proto.lianjia.HouseInfo.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string sub_title = 5;
 * @return {string}
 */
proto.lianjia.HouseInfo.prototype.getSubTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseInfo} returns this
 */
proto.lianjia.HouseInfo.prototype.setSubTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string region = 6;
 * @return {string}
 */
proto.lianjia.HouseInfo.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseInfo} returns this
 */
proto.lianjia.HouseInfo.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string total_price = 7;
 * @return {string}
 */
proto.lianjia.HouseInfo.prototype.getTotalPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseInfo} returns this
 */
proto.lianjia.HouseInfo.prototype.setTotalPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string unit_price = 8;
 * @return {string}
 */
proto.lianjia.HouseInfo.prototype.getUnitPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseInfo} returns this
 */
proto.lianjia.HouseInfo.prototype.setUnitPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string room_info = 9;
 * @return {string}
 */
proto.lianjia.HouseInfo.prototype.getRoomInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseInfo} returns this
 */
proto.lianjia.HouseInfo.prototype.setRoomInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string room_sub = 10;
 * @return {string}
 */
proto.lianjia.HouseInfo.prototype.getRoomSub = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseInfo} returns this
 */
proto.lianjia.HouseInfo.prototype.setRoomSub = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string type_info = 11;
 * @return {string}
 */
proto.lianjia.HouseInfo.prototype.getTypeInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseInfo} returns this
 */
proto.lianjia.HouseInfo.prototype.setTypeInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string type_sub = 12;
 * @return {string}
 */
proto.lianjia.HouseInfo.prototype.getTypeSub = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseInfo} returns this
 */
proto.lianjia.HouseInfo.prototype.setTypeSub = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string area_info = 13;
 * @return {string}
 */
proto.lianjia.HouseInfo.prototype.getAreaInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseInfo} returns this
 */
proto.lianjia.HouseInfo.prototype.setAreaInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string area_sub = 14;
 * @return {string}
 */
proto.lianjia.HouseInfo.prototype.getAreaSub = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseInfo} returns this
 */
proto.lianjia.HouseInfo.prototype.setAreaSub = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lianjia.HouseBaseInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.lianjia.HouseBaseInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lianjia.HouseBaseInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lianjia.HouseBaseInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    houseNo: jspb.Message.getFieldWithDefault(msg, 2, ""),
    layout: jspb.Message.getFieldWithDefault(msg, 3, ""),
    floor: jspb.Message.getFieldWithDefault(msg, 4, ""),
    areaBuild: jspb.Message.getFieldWithDefault(msg, 5, ""),
    structHouse: jspb.Message.getFieldWithDefault(msg, 6, ""),
    areaInner: jspb.Message.getFieldWithDefault(msg, 7, ""),
    buildType: jspb.Message.getFieldWithDefault(msg, 8, ""),
    face: jspb.Message.getFieldWithDefault(msg, 9, ""),
    structBuild: jspb.Message.getFieldWithDefault(msg, 10, ""),
    decoration: jspb.Message.getFieldWithDefault(msg, 11, ""),
    elevatorRatio: jspb.Message.getFieldWithDefault(msg, 12, ""),
    elevator: jspb.Message.getFieldWithDefault(msg, 13, ""),
    property: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lianjia.HouseBaseInfo}
 */
proto.lianjia.HouseBaseInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lianjia.HouseBaseInfo;
  return proto.lianjia.HouseBaseInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lianjia.HouseBaseInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lianjia.HouseBaseInfo}
 */
proto.lianjia.HouseBaseInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHouseNo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLayout(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFloor(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAreaBuild(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStructHouse(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAreaInner(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuildType(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFace(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setStructBuild(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDecoration(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setElevatorRatio(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setElevator(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setProperty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lianjia.HouseBaseInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lianjia.HouseBaseInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lianjia.HouseBaseInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lianjia.HouseBaseInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHouseNo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLayout();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFloor();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAreaBuild();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStructHouse();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAreaInner();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBuildType();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFace();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStructBuild();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDecoration();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getElevatorRatio();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getElevator();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getProperty();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.lianjia.HouseBaseInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseBaseInfo} returns this
 */
proto.lianjia.HouseBaseInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string house_no = 2;
 * @return {string}
 */
proto.lianjia.HouseBaseInfo.prototype.getHouseNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseBaseInfo} returns this
 */
proto.lianjia.HouseBaseInfo.prototype.setHouseNo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string layout = 3;
 * @return {string}
 */
proto.lianjia.HouseBaseInfo.prototype.getLayout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseBaseInfo} returns this
 */
proto.lianjia.HouseBaseInfo.prototype.setLayout = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string floor = 4;
 * @return {string}
 */
proto.lianjia.HouseBaseInfo.prototype.getFloor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseBaseInfo} returns this
 */
proto.lianjia.HouseBaseInfo.prototype.setFloor = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string area_build = 5;
 * @return {string}
 */
proto.lianjia.HouseBaseInfo.prototype.getAreaBuild = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseBaseInfo} returns this
 */
proto.lianjia.HouseBaseInfo.prototype.setAreaBuild = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string struct_house = 6;
 * @return {string}
 */
proto.lianjia.HouseBaseInfo.prototype.getStructHouse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseBaseInfo} returns this
 */
proto.lianjia.HouseBaseInfo.prototype.setStructHouse = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string area_inner = 7;
 * @return {string}
 */
proto.lianjia.HouseBaseInfo.prototype.getAreaInner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseBaseInfo} returns this
 */
proto.lianjia.HouseBaseInfo.prototype.setAreaInner = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string build_type = 8;
 * @return {string}
 */
proto.lianjia.HouseBaseInfo.prototype.getBuildType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseBaseInfo} returns this
 */
proto.lianjia.HouseBaseInfo.prototype.setBuildType = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string face = 9;
 * @return {string}
 */
proto.lianjia.HouseBaseInfo.prototype.getFace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseBaseInfo} returns this
 */
proto.lianjia.HouseBaseInfo.prototype.setFace = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string struct_build = 10;
 * @return {string}
 */
proto.lianjia.HouseBaseInfo.prototype.getStructBuild = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseBaseInfo} returns this
 */
proto.lianjia.HouseBaseInfo.prototype.setStructBuild = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string decoration = 11;
 * @return {string}
 */
proto.lianjia.HouseBaseInfo.prototype.getDecoration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseBaseInfo} returns this
 */
proto.lianjia.HouseBaseInfo.prototype.setDecoration = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string elevator_ratio = 12;
 * @return {string}
 */
proto.lianjia.HouseBaseInfo.prototype.getElevatorRatio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseBaseInfo} returns this
 */
proto.lianjia.HouseBaseInfo.prototype.setElevatorRatio = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string elevator = 13;
 * @return {string}
 */
proto.lianjia.HouseBaseInfo.prototype.getElevator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseBaseInfo} returns this
 */
proto.lianjia.HouseBaseInfo.prototype.setElevator = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string property = 14;
 * @return {string}
 */
proto.lianjia.HouseBaseInfo.prototype.getProperty = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseBaseInfo} returns this
 */
proto.lianjia.HouseBaseInfo.prototype.setProperty = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lianjia.HouseTransactionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.lianjia.HouseTransactionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lianjia.HouseTransactionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lianjia.HouseTransactionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    houseNo: jspb.Message.getFieldWithDefault(msg, 2, ""),
    listingTime: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tradingAuthority: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lastTransaction: jspb.Message.getFieldWithDefault(msg, 5, ""),
    housingPurposes: jspb.Message.getFieldWithDefault(msg, 6, ""),
    houseYear: jspb.Message.getFieldWithDefault(msg, 7, ""),
    propertyRights: jspb.Message.getFieldWithDefault(msg, 8, ""),
    mortgageInfo: jspb.Message.getFieldWithDefault(msg, 9, ""),
    documentPhoto: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lianjia.HouseTransactionInfo}
 */
proto.lianjia.HouseTransactionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lianjia.HouseTransactionInfo;
  return proto.lianjia.HouseTransactionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lianjia.HouseTransactionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lianjia.HouseTransactionInfo}
 */
proto.lianjia.HouseTransactionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHouseNo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setListingTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradingAuthority(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastTransaction(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHousingPurposes(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHouseYear(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPropertyRights(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMortgageInfo(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentPhoto(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lianjia.HouseTransactionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lianjia.HouseTransactionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lianjia.HouseTransactionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lianjia.HouseTransactionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHouseNo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getListingTime();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTradingAuthority();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLastTransaction();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHousingPurposes();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHouseYear();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPropertyRights();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMortgageInfo();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDocumentPhoto();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.lianjia.HouseTransactionInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseTransactionInfo} returns this
 */
proto.lianjia.HouseTransactionInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string house_no = 2;
 * @return {string}
 */
proto.lianjia.HouseTransactionInfo.prototype.getHouseNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseTransactionInfo} returns this
 */
proto.lianjia.HouseTransactionInfo.prototype.setHouseNo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string listing_time = 3;
 * @return {string}
 */
proto.lianjia.HouseTransactionInfo.prototype.getListingTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseTransactionInfo} returns this
 */
proto.lianjia.HouseTransactionInfo.prototype.setListingTime = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string trading_authority = 4;
 * @return {string}
 */
proto.lianjia.HouseTransactionInfo.prototype.getTradingAuthority = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseTransactionInfo} returns this
 */
proto.lianjia.HouseTransactionInfo.prototype.setTradingAuthority = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string last_transaction = 5;
 * @return {string}
 */
proto.lianjia.HouseTransactionInfo.prototype.getLastTransaction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseTransactionInfo} returns this
 */
proto.lianjia.HouseTransactionInfo.prototype.setLastTransaction = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string housing_purposes = 6;
 * @return {string}
 */
proto.lianjia.HouseTransactionInfo.prototype.getHousingPurposes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseTransactionInfo} returns this
 */
proto.lianjia.HouseTransactionInfo.prototype.setHousingPurposes = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string house_year = 7;
 * @return {string}
 */
proto.lianjia.HouseTransactionInfo.prototype.getHouseYear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseTransactionInfo} returns this
 */
proto.lianjia.HouseTransactionInfo.prototype.setHouseYear = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string property_rights = 8;
 * @return {string}
 */
proto.lianjia.HouseTransactionInfo.prototype.getPropertyRights = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseTransactionInfo} returns this
 */
proto.lianjia.HouseTransactionInfo.prototype.setPropertyRights = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string mortgage_info = 9;
 * @return {string}
 */
proto.lianjia.HouseTransactionInfo.prototype.getMortgageInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseTransactionInfo} returns this
 */
proto.lianjia.HouseTransactionInfo.prototype.setMortgageInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string document_photo = 10;
 * @return {string}
 */
proto.lianjia.HouseTransactionInfo.prototype.getDocumentPhoto = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HouseTransactionInfo} returns this
 */
proto.lianjia.HouseTransactionInfo.prototype.setDocumentPhoto = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.lianjia.HousePic.prototype.toObject = function(opt_includeInstance) {
  return proto.lianjia.HousePic.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.lianjia.HousePic} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lianjia.HousePic.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    houseNo: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    picSmallUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    picNormalUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    picLargeUrl: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.lianjia.HousePic}
 */
proto.lianjia.HousePic.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.lianjia.HousePic;
  return proto.lianjia.HousePic.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.lianjia.HousePic} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.lianjia.HousePic}
 */
proto.lianjia.HousePic.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHouseNo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPicSmallUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPicNormalUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPicLargeUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.lianjia.HousePic.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.lianjia.HousePic.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.lianjia.HousePic} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.lianjia.HousePic.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHouseNo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPicSmallUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPicNormalUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPicLargeUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.lianjia.HousePic.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HousePic} returns this
 */
proto.lianjia.HousePic.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string house_no = 2;
 * @return {string}
 */
proto.lianjia.HousePic.prototype.getHouseNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HousePic} returns this
 */
proto.lianjia.HousePic.prototype.setHouseNo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.lianjia.HousePic.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HousePic} returns this
 */
proto.lianjia.HousePic.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string pic_small_url = 4;
 * @return {string}
 */
proto.lianjia.HousePic.prototype.getPicSmallUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HousePic} returns this
 */
proto.lianjia.HousePic.prototype.setPicSmallUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string pic_normal_url = 5;
 * @return {string}
 */
proto.lianjia.HousePic.prototype.getPicNormalUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HousePic} returns this
 */
proto.lianjia.HousePic.prototype.setPicNormalUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string pic_large_url = 6;
 * @return {string}
 */
proto.lianjia.HousePic.prototype.getPicLargeUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.lianjia.HousePic} returns this
 */
proto.lianjia.HousePic.prototype.setPicLargeUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


goog.object.extend(exports, proto.lianjia);
