// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/user.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	message "go.yyue.dev/common/message"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendRequest struct {
	Mobile               string   `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendRequest) Reset()         { *m = SendRequest{} }
func (m *SendRequest) String() string { return proto.CompactTextString(m) }
func (*SendRequest) ProtoMessage()    {}
func (*SendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{0}
}

func (m *SendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendRequest.Unmarshal(m, b)
}
func (m *SendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendRequest.Marshal(b, m, deterministic)
}
func (m *SendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendRequest.Merge(m, src)
}
func (m *SendRequest) XXX_Size() int {
	return xxx_messageInfo_SendRequest.Size(m)
}
func (m *SendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendRequest proto.InternalMessageInfo

func (m *SendRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

type ValidateRequest struct {
	Mobile               string   `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateRequest) Reset()         { *m = ValidateRequest{} }
func (m *ValidateRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateRequest) ProtoMessage()    {}
func (*ValidateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{1}
}

func (m *ValidateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateRequest.Unmarshal(m, b)
}
func (m *ValidateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateRequest.Marshal(b, m, deterministic)
}
func (m *ValidateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateRequest.Merge(m, src)
}
func (m *ValidateRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateRequest.Size(m)
}
func (m *ValidateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateRequest proto.InternalMessageInfo

func (m *ValidateRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *ValidateRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type RegisterRequest struct {
	Mobile               string   `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{2}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *RegisterRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginRequest struct {
	Mobile               string   `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{3}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UserInfo struct {
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{4}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetInfoRequest struct {
	Mobile               string   `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoRequest) Reset()         { *m = GetInfoRequest{} }
func (m *GetInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfoRequest) ProtoMessage()    {}
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed89022014131a74, []int{5}
}

func (m *GetInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoRequest.Unmarshal(m, b)
}
func (m *GetInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoRequest.Merge(m, src)
}
func (m *GetInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetInfoRequest.Size(m)
}
func (m *GetInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoRequest proto.InternalMessageInfo

func (m *GetInfoRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func init() {
	proto.RegisterType((*SendRequest)(nil), "user.SendRequest")
	proto.RegisterType((*ValidateRequest)(nil), "user.ValidateRequest")
	proto.RegisterType((*RegisterRequest)(nil), "user.RegisterRequest")
	proto.RegisterType((*LoginRequest)(nil), "user.LoginRequest")
	proto.RegisterType((*UserInfo)(nil), "user.UserInfo")
	proto.RegisterType((*GetInfoRequest)(nil), "user.GetInfoRequest")
}

func init() { proto.RegisterFile("user/user.proto", fileDescriptor_ed89022014131a74) }

var fileDescriptor_ed89022014131a74 = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x41, 0x6b, 0xfa, 0x40,
	0x10, 0xc5, 0xf5, 0xff, 0x57, 0x9b, 0x8e, 0x45, 0xdb, 0xc1, 0x8a, 0xe4, 0x24, 0x0b, 0x05, 0x2f,
	0x46, 0x6a, 0xf1, 0xd8, 0x8b, 0x50, 0x4a, 0xa1, 0x5e, 0x0c, 0xed, 0xa1, 0xb7, 0x68, 0xa6, 0x21,
	0xd4, 0x64, 0xed, 0xee, 0xc6, 0xe2, 0x17, 0xea, 0xe7, 0x2c, 0xd9, 0xcd, 0x16, 0x9b, 0x0a, 0xa1,
	0x97, 0xec, 0xce, 0xce, 0xbc, 0xf7, 0xc8, 0x8f, 0x81, 0x6e, 0x26, 0x49, 0x4c, 0xf2, 0x8f, 0xb7,
	0x15, 0x5c, 0x71, 0x6c, 0xe4, 0x77, 0xb7, 0xb7, 0xe6, 0x49, 0xc2, 0xd3, 0x49, 0x42, 0x52, 0x06,
	0x11, 0x99, 0x1e, 0xbb, 0x82, 0xb6, 0x4f, 0x69, 0xb8, 0xa4, 0xf7, 0x8c, 0xa4, 0xc2, 0x3e, 0xb4,
	0x12, 0xbe, 0x8a, 0x37, 0x34, 0xa8, 0x0f, 0xeb, 0xa3, 0xd3, 0x65, 0x51, 0xb1, 0x5b, 0xe8, 0x3e,
	0x07, 0x9b, 0x38, 0x0c, 0x14, 0x55, 0x8c, 0x22, 0x42, 0x63, 0xcd, 0x43, 0x1a, 0xfc, 0xd3, 0xaf,
	0xfa, 0xce, 0xee, 0xa0, 0xbb, 0xa4, 0x28, 0x96, 0x8a, 0x44, 0x95, 0xdc, 0x05, 0x67, 0x1b, 0x48,
	0xf9, 0xc1, 0x45, 0x58, 0x58, 0x7c, 0xd7, 0x6c, 0x0e, 0x67, 0x8f, 0x3c, 0x8a, 0xd3, 0xbf, 0x78,
	0xfc, 0x2f, 0x79, 0x0c, 0xc1, 0x79, 0x92, 0x24, 0x1e, 0xd2, 0x57, 0x8e, 0x3d, 0x68, 0x2a, 0xfe,
	0x46, 0x69, 0x11, 0x64, 0x0a, 0x36, 0x82, 0xce, 0x3d, 0xa9, 0x7c, 0xa0, 0x22, 0x67, 0x2a, 0x00,
	0xfc, 0x85, 0xef, 0x93, 0xd8, 0xc5, 0x6b, 0xc2, 0x31, 0x34, 0x72, 0x94, 0x78, 0xe1, 0x69, 0xf6,
	0x07, 0x58, 0xdd, 0x73, 0xcf, 0x52, 0x5f, 0x98, 0x93, 0xd5, 0x70, 0x06, 0x8e, 0x45, 0x8a, 0x97,
	0x46, 0x52, 0x42, 0x7c, 0x4c, 0x36, 0xfd, 0xac, 0x43, 0x3b, 0xff, 0x01, 0x9b, 0x3a, 0x03, 0xc7,
	0xa2, 0xb5, 0x36, 0x25, 0xd4, 0x47, 0xd3, 0xc7, 0xd0, 0xd4, 0x28, 0x11, 0x8d, 0xe6, 0x90, 0xab,
	0xdb, 0x31, 0x6f, 0x96, 0x13, 0xab, 0xe1, 0x35, 0x9c, 0x14, 0x4c, 0xb0, 0x67, 0x9a, 0x3f, 0x11,
	0xfd, 0x96, 0xcc, 0x07, 0x2f, 0xfd, 0x88, 0x7b, 0xfb, 0x7d, 0x46, 0x5e, 0x48, 0x3b, 0xbd, 0x8f,
	0x13, 0xbd, 0x73, 0xab, 0x96, 0x3e, 0x6e, 0xbe, 0x02, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x94, 0x67,
	0xb4, 0xa9, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for SMSService service

type SMSServiceClient interface {
	Send(ctx context.Context, in *SendRequest, opts ...client.CallOption) (*message.Message, error)
	Validate(ctx context.Context, in *ValidateRequest, opts ...client.CallOption) (*message.Message, error)
}

type sMSServiceClient struct {
	c           client.Client
	serviceName string
}

func NewSMSServiceClient(serviceName string, c client.Client) SMSServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "user"
	}
	return &sMSServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *sMSServiceClient) Send(ctx context.Context, in *SendRequest, opts ...client.CallOption) (*message.Message, error) {
	req := c.c.NewRequest(c.serviceName, "SMSService.Send", in)
	out := new(message.Message)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sMSServiceClient) Validate(ctx context.Context, in *ValidateRequest, opts ...client.CallOption) (*message.Message, error) {
	req := c.c.NewRequest(c.serviceName, "SMSService.Validate", in)
	out := new(message.Message)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SMSService service

type SMSServiceHandler interface {
	Send(context.Context, *SendRequest, *message.Message) error
	Validate(context.Context, *ValidateRequest, *message.Message) error
}

func RegisterSMSServiceHandler(s server.Server, hdlr SMSServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&SMSService{hdlr}, opts...))
}

type SMSService struct {
	SMSServiceHandler
}

func (h *SMSService) Send(ctx context.Context, in *SendRequest, out *message.Message) error {
	return h.SMSServiceHandler.Send(ctx, in, out)
}

func (h *SMSService) Validate(ctx context.Context, in *ValidateRequest, out *message.Message) error {
	return h.SMSServiceHandler.Validate(ctx, in, out)
}

// Client API for UserService service

type UserServiceClient interface {
	Register(ctx context.Context, in *RegisterRequest, opts ...client.CallOption) (*message.Message, error)
	Login(ctx context.Context, in *LoginRequest, opts ...client.CallOption) (*UserInfo, error)
	GetInfo(ctx context.Context, in *GetInfoRequest, opts ...client.CallOption) (*UserInfo, error)
}

type userServiceClient struct {
	c           client.Client
	serviceName string
}

func NewUserServiceClient(serviceName string, c client.Client) UserServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "user"
	}
	return &userServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *userServiceClient) Register(ctx context.Context, in *RegisterRequest, opts ...client.CallOption) (*message.Message, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.Register", in)
	out := new(message.Message)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...client.CallOption) (*UserInfo, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.Login", in)
	out := new(UserInfo)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetInfo(ctx context.Context, in *GetInfoRequest, opts ...client.CallOption) (*UserInfo, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.GetInfo", in)
	out := new(UserInfo)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceHandler interface {
	Register(context.Context, *RegisterRequest, *message.Message) error
	Login(context.Context, *LoginRequest, *UserInfo) error
	GetInfo(context.Context, *GetInfoRequest, *UserInfo) error
}

func RegisterUserServiceHandler(s server.Server, hdlr UserServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&UserService{hdlr}, opts...))
}

type UserService struct {
	UserServiceHandler
}

func (h *UserService) Register(ctx context.Context, in *RegisterRequest, out *message.Message) error {
	return h.UserServiceHandler.Register(ctx, in, out)
}

func (h *UserService) Login(ctx context.Context, in *LoginRequest, out *UserInfo) error {
	return h.UserServiceHandler.Login(ctx, in, out)
}

func (h *UserService) GetInfo(ctx context.Context, in *GetInfoRequest, out *UserInfo) error {
	return h.UserServiceHandler.GetInfo(ctx, in, out)
}
